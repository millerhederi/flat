name: build

on: [push, pull_request]

env:
  go_version_latest: 1.20.x

jobs:

  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go_version: ['1.18', '1.19', '1.20']

    name: test go ${{ matrix.go_version }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go_version }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go ${{ env.go_version_latest }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go_version_latest }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          only-new-issues: true
          args: --verbose --timeout 10m

      - name: Check go.mod/go.sum
        run: |
          echo "check if go.mod and go.sum are up to date"
          go mod tidy
          git diff --exit-code go.mod go.sum
